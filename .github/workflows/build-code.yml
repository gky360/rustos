name: Build Code

on:
  push:
    branches:
      - "*"
      - "!staging.tmp"
    tags:
      - "*"
  schedule:
    - cron: "43 21 * * *" # every day at 21:43 UTC
  pull_request:

jobs:
  test:
    name: "Test"

    strategy:
      matrix:
        platform: [ubuntu-latest, macos-latest, windows-latest]

    runs-on: ${{ matrix.platform }}
    timeout-minutes: 15

    steps:
      - name: "Checkout Repository"
        uses: actions/checkout@v1

      - name: Install Rustup
        run: |
          curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y --default-toolchain nightly-2019-11-24
          echo ::add-path::$HOME/.cargo/bin
        if: runner.os == 'macOS'

      - name: "Print Rust Version"
        run: |
          rustc -Vv
          cargo -Vv
      - name: "Install Rustup Components"
        run: rustup component add rust-src llvm-tools-preview
      - name: "Install bootimage"
        run: cargo install bootimage

      - name: "Run cargo build"
        run: cargo build
      - name: "Create Bootimage"
        run: cargo bootimage

        # install QEMU
      - name: Install QEMU (Linux)
        run: |
          # workaround for unsuccessful `apt update`
          sudo rm -f /etc/apt/sources.list.d/dotnetdev.list /etc/apt/sources.list.d/microsoft-prod.list

          sudo apt update
          sudo apt install qemu-system-x86
        if: runner.os == 'Linux'
      - name: Install QEMU (macOS)
        run: brew install qemu
        if: runner.os == 'macOS'
        env:
          HOMEBREW_NO_AUTO_UPDATE: 1
          HOMEBREW_NO_BOTTLE_SOURCE_FALLBACK: 1
          HOMEBREW_NO_INSTALL_CLEANUP: 1
      - name: Install Scoop (Windows)
        run: |
          Invoke-Expression (New-Object System.Net.WebClient).DownloadString('https://get.scoop.sh')
          echo ::add-path::$HOME\scoop\shims
        if: runner.os == 'Windows'
        shell: pwsh
      - name: Install QEMU (Windows)
        run: scoop install qemu
        if: runner.os == 'Windows'
        shell: pwsh
      - name: "Print QEMU Version"
        run: qemu-system-x86_64 --version

      - name: "Run cargo test"
        run: cargo test

  check_formatting:
    name: "Check Formatting"
    runs-on: ubuntu-latest
    timeout-minutes: 2
    steps:
      - uses: actions/checkout@v1
      - name: "Use the latest Rust nightly with rustfmt"
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly-2019-11-24
          profile: minimal
          components: rustfmt
          override: true
      - run: cargo fmt -- --check
